//
//  NetworkingTest.swift
//  PoliceTests
//
//  Created by Riccardo on 28/01/2019.
//  Copyright Â© 2019 RiccardoScanavacca. All rights reserved.
//

import XCTest
@testable import Police

class NetworkingTest: XCTestCase {

    override func setUp() {
        
    }

    override func tearDown() {
        
    }
  
    func testSuccesfulNetworkGetRequest() {
        
        networkRequest(forUrl: Task.succesful.url) { (error) in
            
            XCTAssertNil(error)
        }
    }
    
    func testErrorNetworkGetRequest() {
        
        networkRequest(forUrl: Task.error.url) { (error) in
            
            XCTAssertNotNil(error)
        }
    }
    
    
    func testTooLongGetRequest() {
        
        networkRequest(forUrl: Task.exceedResultLimit.url) { (error) in
            
            XCTAssert(error?.code == 503)
        }
    }
    
    func testTooManyCrimesGetRequest() {
        
        networkRequest(forUrl: Task.longQuery.url) { (error) in
            
            XCTAssert(error?.code == 400)
        }
    }
    
    private func networkRequest(forUrl url: URL, completion: (NSError?) -> Void) {
        
        let expectation = self.expectation(description: "Request")
        var connectionError: NSError? = nil
        
        NetworkProvider.getRequest(forUrl: url) { (data, error) in
            
            connectionError = error
            expectation.fulfill()
        }
        
        self.waitForExpectations(timeout: 10) { (error) in
            
            print(error.debugDescription)
        }
        
        completion(connectionError)
    }
    
    
    enum Task {
        
        case succesful, error, longQuery, exceedResultLimit
        
        var url: URL {
            
            switch self {
            case .succesful:
                return URL(string:"https://data.police.uk/api/crime-last-updated")!
            case .longQuery:
                return URL(string: longRequest)!
            case .exceedResultLimit:
                return URL(string: "https://data.police.uk/api/crimes-street/all-crime?poly=50.068,-5.543:51.134,1.338:57.130,-2.278:56.4130,-6.278&date=2017-01")!
            case .error:
                return URL(string: "randomString")!
            }
        }
    }
    
    static let longRequest = "https://data.police.uk/api/stops-street?poly=52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88:52.2,0.5:52.8,0.2:52.1,0.88"
}
